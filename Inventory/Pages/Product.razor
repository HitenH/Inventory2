@page "/product/{productId?}";
@attribute [Authorize];

<h2 class="d-flex justify-content-center mb-5">Product</h2>

<EditForm EditContext="editContext" class="card-header"
          OnSubmit="async ()=>
                {
                    if(ProductId == null){
                        await AddProduct();
                }
                    else{
                        await UpdateProduct();
                } }">
    <DataAnnotationsValidator />
    <div class="d-flex justify-content-between">
        <div class="mb-2 col-5">
            <label for="name" class="form-label">Name</label>
            <InputText @bind-Value="productModel.Name" id="name" class="form-control" />
        </div>
        <div class="mb-2 col-5">
            <label for="rate" class="form-label">Rate</label>
            <InputNumber @bind-Value="productModel.Rate" id="rate" class="form-control col" />
        </div>
    </div>
    <div class="d-flex justify-content-between">
        <div class="mb-2 col-5">
            <label for="prodid" class="form-label">ProductId</label>
            <InputText @bind-Value="productModel.ProductId" id="prodid" class="form-control" rows="3" />
        </div>
        <div class="mb-2 col-5">
            <label for="category" class="form-label">Category</label>
            <InputSelect @bind-Value="categoryId" class="form-control" id="category">
                <option value="@(Guid.Empty)">-</option>
                @if (categories.Count != 0)
                {
                    @foreach (var item in categories)
                    {
                        if (productModel.Category != null && item.Id == productModel.Category.Id)
                        {
                            <option selected value="@item.Id">@item.Name</option>
                        }
                        else
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    }
                }

            </InputSelect>
        </div>
    </div>
    <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <InputTextArea @bind-Value="productModel.Description" id="description" class="form-control" rows="2" />
    </div>
    <ValidationSummary />
    <button type="submit" id="button-submit" class="btn btn-success">Save</button>
    <NavLink type="button" href="/products" id="button-close" class="btn btn-info ms-3">Close</NavLink>
    @if (ProductId != null)
    {
        <button type="button" class="btn btn-danger ms-3" @onclick="DeleteProduct">Delete</button>
    }
    <NavLink class="btn btn-secondary ms-3" href="/">Home</NavLink>
</EditForm>

@if (ProductId != null && productEntity != null)
{
    <Variant Product="productEntity" />
}

<Modal @ref="modal" Title="Error Message">
    <BodyTemplate>
        <div class="card">
            <div class="card-body">
                @errorMessageShort
            </div>
            <button class="btn btn-light bg-white border border-secondary me-4" type="button"
                    @onclick="(e => isHideErrorMessage = !isHideErrorMessage)">
                           @(isHideErrorMessage?"Show Full":"Hide")</button>
            @if (!isHideErrorMessage)
            {
                <div class="card-body bg-white mx-3 mb-1 mt-3">
                    @errorMessageFull
                </div>
            }
        </div>

    </BodyTemplate>
    <FooterTemplate>
        <Button Color="ButtonColor.Secondary" @onclick="OnHideModalClick">Close</Button>
    </FooterTemplate>
</Modal>
